ARM GAS  /tmp/ccLYDr7G.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.delay_forLoop,"ax",%progbits
  20              		.align	1
  21              		.global	delay_forLoop
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	delay_forLoop:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /**
   2:Core/Src/main.c ****  ******************************************************************************
   3:Core/Src/main.c ****  * @file           : main.c
   4:Core/Src/main.c ****  * @author         : Auto-generated by STM32CubeIDE
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** #include <stdint.h>
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** // Table 10. Register boundary addresses
  22:Core/Src/main.c **** // RCC base and register
  23:Core/Src/main.c **** #define RCC_BASE_ADDR (0x40023800)
  24:Core/Src/main.c **** #define RCC_AHB1ENR_OFFSET (0x30)
  25:Core/Src/main.c **** #define RCC_AHB1ENR                                                            \
  26:Core/Src/main.c ****     (*((volatile uint32_t*)(RCC_BASE_ADDR + RCC_AHB1ENR_OFFSET)))
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** // GPIOA base and registers
  29:Core/Src/main.c **** #define GPIOA_BASE_ADDR (0x40020000)
ARM GAS  /tmp/ccLYDr7G.s 			page 2


  30:Core/Src/main.c **** #define GPIOA_MODER (*((volatile uint32_t*)(GPIOA_BASE_ADDR + 0x00)))
  31:Core/Src/main.c **** #define GPIOA_PUPDR (*((volatile uint32_t*)(GPIOA_BASE_ADDR + 0x0C)))
  32:Core/Src/main.c **** #define GPIOA_IDR (*((volatile uint32_t*)(GPIOA_BASE_ADDR + 0x10)))
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** // GPIOD base and registers
  35:Core/Src/main.c **** #define GPIOD_BASE_ADDR (0x40020C00)
  36:Core/Src/main.c **** #define GPIOD_MODER (*((volatile uint32_t*)(GPIOD_BASE_ADDR + 0x00)))
  37:Core/Src/main.c **** #define GPIOD_OTYPER (*((volatile uint32_t*)(GPIOD_BASE_ADDR + 0x04)))
  38:Core/Src/main.c **** #define GPIOD_PUPDR (*((volatile uint32_t*)(GPIOD_BASE_ADDR + 0x0C)))
  39:Core/Src/main.c **** #define GPIOD_ODR (*((volatile uint32_t*)(GPIOD_BASE_ADDR + 0x14)))
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #define __NOP() __asm volatile("nop")
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define DELAY_LOOP_COUNTER 1000000
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** // typedef struct {
  46:Core/Src/main.c **** //	uint32_t resvervd [12];
  47:Core/Src/main.c **** //	uint32_t AHB1ENR ;
  48:Core/Src/main.c **** //
  49:Core/Src/main.c **** // }RCC;
  50:Core/Src/main.c **** // #define RCC_Typedef ((((RCC* )(RCC_BASE_ADDR))))
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** // Delay using a for loop counter
  53:Core/Src/main.c **** void delay_forLoop(uint32_t ms)
  54:Core/Src/main.c **** {
  30              		.loc 1 54 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  55:Core/Src/main.c ****     for (int32_t i = 0; i < DELAY_LOOP_COUNTER; i++)
  35              		.loc 1 55 5 view .LVU1
  36              	.LBB2:
  37              		.loc 1 55 10 view .LVU2
  38              		.loc 1 55 18 is_stmt 0 view .LVU3
  39 0000 0023     		movs	r3, #0
  40              		.loc 1 55 5 view .LVU4
  41 0002 01E0     		b	.L2
  42              	.LVL1:
  43              	.L3:
  56:Core/Src/main.c ****     {
  57:Core/Src/main.c ****         __NOP();
  44              		.loc 1 57 9 is_stmt 1 discriminator 3 view .LVU5
  45              		.syntax unified
  46              	@ 57 "Core/Src/main.c" 1
  47 0004 00BF     		nop
  48              	@ 0 "" 2
  55:Core/Src/main.c ****     for (int32_t i = 0; i < DELAY_LOOP_COUNTER; i++)
  49              		.loc 1 55 49 discriminator 3 view .LVU6
  55:Core/Src/main.c ****     for (int32_t i = 0; i < DELAY_LOOP_COUNTER; i++)
  50              		.loc 1 55 50 is_stmt 0 discriminator 3 view .LVU7
  51              		.thumb
  52              		.syntax unified
  53 0006 0133     		adds	r3, r3, #1
  54              	.LVL2:
  55              	.L2:
  55:Core/Src/main.c ****     for (int32_t i = 0; i < DELAY_LOOP_COUNTER; i++)
ARM GAS  /tmp/ccLYDr7G.s 			page 3


  56              		.loc 1 55 25 is_stmt 1 discriminator 1 view .LVU8
  55:Core/Src/main.c ****     for (int32_t i = 0; i < DELAY_LOOP_COUNTER; i++)
  57              		.loc 1 55 5 is_stmt 0 discriminator 1 view .LVU9
  58 0008 014A     		ldr	r2, .L4
  59 000a 9342     		cmp	r3, r2
  60 000c FADD     		ble	.L3
  61              	.LBE2:
  58:Core/Src/main.c ****     }
  59:Core/Src/main.c **** }
  62              		.loc 1 59 1 view .LVU10
  63 000e 7047     		bx	lr
  64              	.L5:
  65              		.align	2
  66              	.L4:
  67 0010 3F420F00 		.word	999999
  68              		.cfi_endproc
  69              	.LFE0:
  71              		.section	.text.main,"ax",%progbits
  72              		.align	1
  73              		.global	main
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	main:
  79              	.LFB1:
  60:Core/Src/main.c **** int main(void)
  61:Core/Src/main.c **** {
  80              		.loc 1 61 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ Volatile: function does not return.
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85 0000 08B5     		push	{r3, lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
  62:Core/Src/main.c **** 
  63:Core/Src/main.c ****     // RCC 16MHz
  64:Core/Src/main.c ****     //
  65:Core/Src/main.c ****     RCC_AHB1ENR |= (1U << 0); // enable GPIOA
  90              		.loc 1 65 5 view .LVU12
  91              		.loc 1 65 17 is_stmt 0 view .LVU13
  92 0002 2B4A     		ldr	r2, .L10
  93 0004 D2F83038 		ldr	r3, [r2, #2096]
  94 0008 43F00103 		orr	r3, r3, #1
  95 000c C2F83038 		str	r3, [r2, #2096]
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****     // configuration for GPIOA PIN 0
  68:Core/Src/main.c ****     // INPUT
  69:Core/Src/main.c ****     GPIOA_MODER &= ~(1U << 0);
  96              		.loc 1 69 5 is_stmt 1 view .LVU14
  97              		.loc 1 69 17 is_stmt 0 view .LVU15
  98 0010 284B     		ldr	r3, .L10+4
  99 0012 1968     		ldr	r1, [r3]
 100 0014 21F00101 		bic	r1, r1, #1
 101 0018 1960     		str	r1, [r3]
ARM GAS  /tmp/ccLYDr7G.s 			page 4


  70:Core/Src/main.c ****     GPIOA_MODER &= ~(1U << 1);
 102              		.loc 1 70 5 is_stmt 1 view .LVU16
 103              		.loc 1 70 17 is_stmt 0 view .LVU17
 104 001a 1968     		ldr	r1, [r3]
 105 001c 21F00201 		bic	r1, r1, #2
 106 0020 1960     		str	r1, [r3]
  71:Core/Src/main.c ****     // // pull down
  72:Core/Src/main.c ****     // GPIOA_PUPDR &= ~(1U << 0);
  73:Core/Src/main.c ****     // GPIOA_PUPDR |= (1U << 1);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****     // enable RCC clock for GPIOD
  76:Core/Src/main.c ****     RCC_AHB1ENR |= (1U << 3); // enble GPIOD
 107              		.loc 1 76 5 is_stmt 1 view .LVU18
 108              		.loc 1 76 17 is_stmt 0 view .LVU19
 109 0022 D2F83018 		ldr	r1, [r2, #2096]
 110 0026 41F00801 		orr	r1, r1, #8
 111 002a C2F83018 		str	r1, [r2, #2096]
  77:Core/Src/main.c ****                               // configuration for GPIOD OUTPUT
  78:Core/Src/main.c ****                               // PIN 12
  79:Core/Src/main.c ****     GPIOD_MODER &= ~(3U << (12 * 2));
 112              		.loc 1 79 5 is_stmt 1 view .LVU20
 113              		.loc 1 79 17 is_stmt 0 view .LVU21
 114 002e D3F8002C 		ldr	r2, [r3, #3072]
 115 0032 22F04072 		bic	r2, r2, #50331648
 116 0036 C3F8002C 		str	r2, [r3, #3072]
  80:Core/Src/main.c ****     GPIOD_MODER |= (1U << 24);
 117              		.loc 1 80 5 is_stmt 1 view .LVU22
 118              		.loc 1 80 17 is_stmt 0 view .LVU23
 119 003a D3F8002C 		ldr	r2, [r3, #3072]
 120 003e 42F08072 		orr	r2, r2, #16777216
 121 0042 C3F8002C 		str	r2, [r3, #3072]
  81:Core/Src/main.c ****     GPIOD_MODER &= ~(1U << 25);
 122              		.loc 1 81 5 is_stmt 1 view .LVU24
 123              		.loc 1 81 17 is_stmt 0 view .LVU25
 124 0046 D3F8002C 		ldr	r2, [r3, #3072]
 125 004a 22F00072 		bic	r2, r2, #33554432
 126 004e C3F8002C 		str	r2, [r3, #3072]
  82:Core/Src/main.c ****     // PIN 13
  83:Core/Src/main.c ****     GPIOD_MODER &= ~(3U << (13 * 2));
 127              		.loc 1 83 5 is_stmt 1 view .LVU26
 128              		.loc 1 83 17 is_stmt 0 view .LVU27
 129 0052 D3F8002C 		ldr	r2, [r3, #3072]
 130 0056 22F04062 		bic	r2, r2, #201326592
 131 005a C3F8002C 		str	r2, [r3, #3072]
  84:Core/Src/main.c ****     GPIOD_MODER |= (1U << 26);
 132              		.loc 1 84 5 is_stmt 1 view .LVU28
 133              		.loc 1 84 17 is_stmt 0 view .LVU29
 134 005e D3F8002C 		ldr	r2, [r3, #3072]
 135 0062 42F08062 		orr	r2, r2, #67108864
 136 0066 C3F8002C 		str	r2, [r3, #3072]
  85:Core/Src/main.c ****     GPIOD_MODER &= ~(1U << 27);
 137              		.loc 1 85 5 is_stmt 1 view .LVU30
 138              		.loc 1 85 17 is_stmt 0 view .LVU31
 139 006a D3F8002C 		ldr	r2, [r3, #3072]
 140 006e 22F00062 		bic	r2, r2, #134217728
 141 0072 C3F8002C 		str	r2, [r3, #3072]
  86:Core/Src/main.c ****     // PUSH PULL
ARM GAS  /tmp/ccLYDr7G.s 			page 5


  87:Core/Src/main.c ****     GPIOD_PUPDR &= ~(3U << (12 * 2));
 142              		.loc 1 87 5 is_stmt 1 view .LVU32
 143              		.loc 1 87 17 is_stmt 0 view .LVU33
 144 0076 D3F80C2C 		ldr	r2, [r3, #3084]
 145 007a 22F04072 		bic	r2, r2, #50331648
 146 007e C3F80C2C 		str	r2, [r3, #3084]
  88:Core/Src/main.c ****     GPIOD_PUPDR &= ~(3U << (13 * 2));
 147              		.loc 1 88 5 is_stmt 1 view .LVU34
 148              		.loc 1 88 17 is_stmt 0 view .LVU35
 149 0082 D3F80C2C 		ldr	r2, [r3, #3084]
 150 0086 22F04062 		bic	r2, r2, #201326592
 151 008a C3F80C2C 		str	r2, [r3, #3084]
 152              	.L7:
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     //
  91:Core/Src/main.c ****     // PIND 12 && PIN D13
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****     /* Loop forever */
  94:Core/Src/main.c ****     // GPIOD_ODR &= ~((1U << 12) | (1U << 13));
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     while (1)
 153              		.loc 1 96 5 is_stmt 1 view .LVU36
  97:Core/Src/main.c ****     {
  98:Core/Src/main.c ****         //		GPIOD_ODR |= (1U<<12)| (1U << 13);
  99:Core/Src/main.c ****         //		int8_t btn_status  = (GPIOA_IDR & (1U<< 1 ))!= 0;
 100:Core/Src/main.c ****         if ((GPIOA_IDR & (1U << 0)))
 154              		.loc 1 100 9 view .LVU37
 155              		.loc 1 100 14 is_stmt 0 view .LVU38
 156 008e 094B     		ldr	r3, .L10+4
 157 0090 1B69     		ldr	r3, [r3, #16]
 158              		.loc 1 100 12 view .LVU39
 159 0092 13F0010F 		tst	r3, #1
 160 0096 FAD0     		beq	.L7
 101:Core/Src/main.c ****         {
 102:Core/Src/main.c ****             GPIOD_ODR ^= ((1U << 12) | (1U << 13));
 161              		.loc 1 102 13 is_stmt 1 view .LVU40
 162              		.loc 1 102 23 is_stmt 0 view .LVU41
 163 0098 064A     		ldr	r2, .L10+4
 164 009a D2F8143C 		ldr	r3, [r2, #3092]
 165 009e 83F44053 		eor	r3, r3, #12288
 166 00a2 C2F8143C 		str	r3, [r2, #3092]
 103:Core/Src/main.c ****             delay_forLoop(1000);
 167              		.loc 1 103 13 is_stmt 1 view .LVU42
 168 00a6 4FF47A70 		mov	r0, #1000
 169 00aa FFF7FEFF 		bl	delay_forLoop
 170              	.LVL3:
 171 00ae EEE7     		b	.L7
 172              	.L11:
 173              		.align	2
 174              	.L10:
 175 00b0 00300240 		.word	1073885184
 176 00b4 00000240 		.word	1073872896
 177              		.cfi_endproc
 178              	.LFE1:
 180              		.text
 181              	.Letext0:
 182              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccLYDr7G.s 			page 6


 183              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccLYDr7G.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLYDr7G.s:20     .text.delay_forLoop:0000000000000000 $t
     /tmp/ccLYDr7G.s:26     .text.delay_forLoop:0000000000000000 delay_forLoop
     /tmp/ccLYDr7G.s:67     .text.delay_forLoop:0000000000000010 $d
     /tmp/ccLYDr7G.s:72     .text.main:0000000000000000 $t
     /tmp/ccLYDr7G.s:78     .text.main:0000000000000000 main
     /tmp/ccLYDr7G.s:175    .text.main:00000000000000b0 $d

NO UNDEFINED SYMBOLS
